***************************************************************************1 exercise***************************************************************************
Согласно ITIL, какова связь между Данными, Информацией, Знаниями и Мудростью?

Данные, информация и знания позволяют описать уже существующие процессы и связи, но только мудрость даёт возможность предсказывать, прогнозировать. Таким образом, для создания инноваций не обойтись без последнего этапа обработки данных.


***************************************************************************2 exercise***************************************************************************
Приведите примеры различных видов изменений (в понимании ITIL) из вашего рабочего опыта.

Пример стандартных изменений: Замена картриджа.
Пример обычных изменений: Замена локального firewall.
Пример экстренных изменений: Развалился raid на главном сервере.


***************************************************************************3 exercise***************************************************************************
Как категоризация инцидентов (Incidents) помогает в управлении инцидентами (Incident Management)?

Правильная категоризация инцидентов помогает перенаправить их сразу в нужную группу и проводить анализ инцидентов в различных разрезах, а также формирует основу для поиска причин возникновения инцидентов и их устранения в рамках процесса управления проблемами.
Каждом инциденту присваивается определенный приоритет.


***************************************************************************4 exercise***************************************************************************
Зачем нужен мониторинг? В своём ответе постарайтесь придерживаться идей ITIL.

Мониторинг необходим чтобы: систематически наблюдать за услугами и их компонентами, а также регистрировать и сообщать об отдельных изменениях состояния, определенных как события.


***************************************************************************5 exercise***************************************************************************
Перечислите ключевые метрики качества и эффективности работы Технической поддержки?

Среднее время первого ответа
Среднее время ответа на заявку
Доля решенных заявок
Индекс потребительской лояльности
Оценка удовлетворенности клиентов
Уровень удержания клиентов
Оценка усилий клиентов


***************************************************************************6 exercise***************************************************************************

Приведите пример любого процесса (Process) с которым вы часто сталкивайтесь и опишите для него следующие параметры:

Системное администрирование как непрерывный процесс работы отдела в компании.


•	Входные и выходные данные;

Заявки пользователей.


•	Цель;

Стабильная работа программной и аппараной части компании.


•	Уровень по CMMI Модели зрелости и обоснование Вашего решения;

Относиться к 3 уровню зрелости.
Потому что, процессы определены. Установлены стандарты в пределах организации. 
Присутствует более детальное описание всех процессов, в котором лучше раскрываются связи и зависимости, знание которых позволяет улучшить управление.



***************************************************************************7 exercise*************************************************************************** 
Опишите основные принципы Agile Manifesto и объясните задачу, которую они помогают решить, будучи примененными к разработке ПО;


Наивысшим приоритетом для нас является удовлетворение потребностей
заказчика, благодаря регулярной и ранней поставке ценного программного
обеспечения.

Изменение требований приветствуется, даже на поздних стадиях разработки.
Agile-процессы позволяют использовать изменения для обеспечения заказчику
конкурентного преимущества.

Работающий продукт следует выпускать как можно чаще, с периодичностью
от пары недель до пары месяцев.

На протяжении всего проекта разработчики и представители бизнеса должны
ежедневно работать вместе.

Над проектом должны работать мотивированные профессионалы. Чтобы
работа была сделана, создайте условия, обеспечьте поддержку и полностью
доверьтесь им.

Непосредственное общение является наиболее практичным и эффективным
способом обмена информацией как с самой командой, так и внутри команды.

Работающий продукт — основной показатель прогресса.

Инвесторы, разработчики и пользователи должны иметь возможность
поддерживать постоянный ритм бесконечно. Agile помогает наладить такой
устойчивый процесс разработки.

Постоянное внимание к техническому совершенству и качеству
проектирования повышает гибкость проекта.

Простота — искусство минимизации лишней работы — крайне необходима.

Самые лучшие требования, архитектурные и технические решения рождаются
у самоорганизующихся команд.

Команда должна систематически анализировать возможные способы
улучшения эффективности и соответственно корректировать
стиль своей работы.



***************************************************************************8 exercise***************************************************************************
Опишите основные Достоинства, Недостатки и Критерии применимости следующих моделей разработки:

•	Waterfall

Достоинства:
+ Полное документирование каждого этапа;
+ Четкое планирование сроков и затрат;
+ Прозрачность процессов для заказчика;

Недостатки:
— Необходимость утверждения полного объема требований к системе еще на первом этапе;
— В случае необходимости внесения изменений требований позднее – возврат к первой стадии и переделка заново всей проделанной работы;
— Увеличение затрат средств и времени в случае необходимости изменения требований.

Применимость:
В проектах с четко определенными требованиями, для которых не предусматривается их изменений в процессе разработки;
Для проектов, которые мигрируют с одной платформы на другую. То есть, требования остаются те же, меняется только системное окружение и/или язык программирования;


•	Iterative

Достоинства:
+ Раннее создание работающего ПО;
+ Гибкость – готовность к изменению требований на любом этапе разработки;
+ Каждая итерация – маленький этап, для которого тестирование и анализ рисков обеспечить проще, чем для всего жизненного цикла продукта.

Недостатки:
— Каждая фаза – самостоятельна, отдельные итерации не накладываются;
— Могут возникнуть проблемы с реализацией общей архитектуры системы, поскольку не все требования известны к началу проектирования.

Применимость:
Для крупных проектов;
Когда известны, по крайней мере, ключевые требования;
Когда требования к проекту могут меняться в процессе разработки.


•	Spiral

Достоинства:
+ Улучшенный анализ рисков;
+ Хорошая документация процесса разработки;
+ Гибкость – возможность внесения изменений и добавления новой функциональности даже на относительно поздних этапах;
+ Раннее создание рабочих прототипов.

Недостатки:
— Может быть достаточно дорогой в использовании;
— Управление рисками требует привлечения высококлассных специалистов;
— Успех процесса в большой степени зависит от стадии анализа рисков;
— Не подходит для небольших проектов.

Применимость:
Когда важен анализ рисков и затрат;
Крупные долгосрочные проекты с отсутствием четких требований или вероятностью их динамического изменения;
При разработке новой линейки продуктов.


•	V-Model

Достоинства:
+ Строгая этапизация;
+ Планирование тестирования и верификация системы производятся на ранних этапах;
+ Улучшенный, по сравнению с каскадной моделью, тайм-менеджмент;
+ Промежуточное тестирование.

Недостатки:
— Недостаточная гибкость модели;
— Собственно создание программы происходит на этапе написания кода, то есть уже в середине процесса разработки;
— Недостаточный анализ рисков;
— Нет работы с параллельными событиями и возможности динамического внесения изменений.

Применимость:
В проектах, в которых существуют временные и финансовые ограничения;
Для задач, которые предполагают более широкое, по сравнению с каскадной моделью, тестовое покрытие.

***************************************************************************9 exercise***************************************************************************
Для приведённых ниже проектов, что бы вы выбрали: Scrum или Kanban?

•	Подготовка к свадьбе - Scrum
•	Работа отдела технической поддержки - Kanban
•	Разработка коробочного версии системы учёта пользовательских заявок с дальнейшей поддержкой этого продукта - Kanban
•	Косметический ремонт ванной комнаты - Scrum
•	Startup проект - Scrum


***************************************************************************10 exercise***************************************************************************
Какие принципы Lean поддерживает Kanban?

Визуализация – доска с карточками-задачами (user-stories в разработке продукта). Доска может быть физическая или виртуальная.
Имеется план разработки, отсортированный по приоритету (backlog в разработке продукта).
Ограничение одновременно выполняемых задач.
Постоянная оптимизация процессов
